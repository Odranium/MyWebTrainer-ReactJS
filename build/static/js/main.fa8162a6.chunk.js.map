{"version":3,"sources":["Button.js","App.js","serviceWorker.js","index.js"],"names":["Button","className","text","onClick","onMouseEnter","onMouseLeave","App","state","hoverFew","hover","frequencyChosen","programChosen","programDescription","step1of4","step2of4","step3of4","i","hoverFewCopy","this","setState","hoverCopy","id","ProgramsList","toggleHoverFew","frequency","programDescripton","fullbodyProgram","halfbodyProgram","splitProgram","FrequencyChoose","ProgramComfirm","ProgramCreation","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oPAaeA,EARA,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,UAAWC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACzD,OACC,yBAAKJ,UAAWA,EAAWE,QAASA,EAASC,aAAcA,EAAcC,aAAcA,GACtF,8BAAOH,KCgKKI,G,wDAlKd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACZC,SAAU,EAAC,GAAO,GAAO,GACzBC,OAAO,EACPC,gBAAiB,QACjBC,cAAe,QACfC,mBAAoB,QACpBC,UAAU,EACVC,UAAU,EACVC,UAAU,GAVE,E,2DAeCC,GACd,IAAIC,EAAeC,KAAKX,MAAMC,SAC9BS,EAAaD,IAAMC,EAAaD,GAChCE,KAAKC,SAAS,CAAEX,SAAUS,M,oCAI1B,IAAIG,GAAaF,KAAKX,MAAME,MAC5BS,KAAKC,SAAS,CAAEV,MAAOW,M,wCAIL,IAAD,OAEjB,OACC,6BACC,kEACA,wEACA,yBAAKC,GAAG,mBACP,kBAAC,EAAD,CACCpB,UAAW,UAAYiB,KAAKX,MAAMC,SAAS,GAC3CN,KAAK,4BACLC,QAAS,kBAAM,EAAKmB,aAAa,8BACjClB,aAAc,kBAAM,EAAKmB,eAAe,IACxClB,aAAc,kBAAM,EAAKkB,eAAe,MAEzC,kBAAC,EAAD,CACCtB,UAAW,UAAYiB,KAAKX,MAAMC,SAAS,GAC3CN,KAAK,qBACLC,QAAS,kBAAM,EAAKmB,aAAa,uBACjClB,aAAc,kBAAM,EAAKmB,eAAe,IACxClB,aAAc,kBAAM,EAAKkB,eAAe,MAEzC,kBAAC,EAAD,CACCtB,UAAW,UAAYiB,KAAKX,MAAMC,SAAS,GAC3CN,KAAK,0BACLC,QAAS,kBAAM,EAAKmB,aAAa,4BACjClB,aAAc,kBAAM,EAAKmB,eAAe,IACxClB,aAAc,kBAAM,EAAKkB,eAAe,U,mCAShCC,GAEZ,OADAN,KAAKC,SAAS,CAAET,gBAAiBc,IACzBA,GACP,IAAK,4BACJN,KAAKC,SAAS,CACbR,cAAe,WACfC,mBAAoB,sDAErB,MACD,IAAK,qBACJM,KAAKC,SAAS,CACbR,cAAe,WACfC,mBACC,0HAEF,MACD,IAAK,0BACJM,KAAKC,SAAS,CACbR,cAAe,QACfC,mBAAoB,sEAKvBM,KAAKC,SAAS,CAAEN,UAAU,EAAOC,UAAU,EAAMN,SAAU,EAAC,GAAO,GAAO,O,uCAIzD,IAAD,OACZiB,EAAoBP,KAAKX,MAAMK,mBAC/BF,EAAkBQ,KAAKX,MAAMG,gBACjC,OACC,6BACC,kEACA,qEACA,iEACqCA,EADrC,qDACwG,IACvG,2BAAIQ,KAAKX,MAAMI,eAFhB,IAEmC,6BAFnC,8BAG0Bc,EAH1B,KAKA,yBAAKJ,GAAG,kBACP,kBAAC,EAAD,CACCpB,UAAW,UAAYiB,KAAKX,MAAMC,SAAS,GAC3CN,KAAK,SACLC,QAAS,kBAAM,EAAKgB,SAAS,CAAEN,UAAU,EAAMC,UAAU,EAAON,SAAU,EAAC,GAAO,GAAO,MACzFJ,aAAc,kBAAM,EAAKmB,eAAe,IACxClB,aAAc,kBAAM,EAAKkB,eAAe,MAEzC,kBAAC,EAAD,CACCtB,UAAW,UAAYiB,KAAKX,MAAMC,SAAS,GAC3CN,KAAK,6BACLC,QAAS,kBAAM,EAAKgB,SAAS,CAAEL,UAAU,EAAOC,UAAU,KAC1DX,aAAc,kBAAM,EAAKmB,eAAe,IACxClB,aAAc,kBAAM,EAAKkB,eAAe,U,wCAS5C,OACC,6BACC,kEACA,uEACA,yBAAKF,GAAG,kBACP,yFAC0DH,KAAKX,MAAMI,cADrE,IACoF,6BACrD,aAA7BO,KAAKX,MAAMI,eAAgCO,KAAKQ,kBACnB,aAA7BR,KAAKX,MAAMI,eAAgCO,KAAKS,kBACnB,UAA7BT,KAAKX,MAAMI,eAA6BO,KAAKU,oB,wCAQlD,OAAO,kG,wCAIP,OAAO,kG,qCAIP,OAAO,+F,+BAGP,OACC,6BACEV,KAAKX,MAAMM,UAAYK,KAAKW,kBAC5BX,KAAKX,MAAMO,UAAYI,KAAKY,iBAC5BZ,KAAKX,MAAMQ,UAAYG,KAAKa,uB,GA7JfC,c,MCOEC,QACU,cAA7BC,OAAOC,SAASC,UAEc,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCXjCC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,iBDkHpB,kBAAmBC,WACtBA,UAAUC,cAAcC,MACtBC,MAAK,SAACC,GACNA,EAAaC,gBAEbC,OAAM,SAACC,GACPC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.fa8162a6.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\n/* Ce composant permet l'affichage des \"buttons\" */\n\nimport React from \"react\";\n\nconst Button = ({ className, text, onClick, onMouseEnter, onMouseLeave }) => {\n\treturn (\n\t\t<div className={className} onClick={onClick} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n\t\t\t<span>{text}</span>\n\t\t</div>\n\t);\n};\n\nexport default Button;\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { Component } from \"react\";\nimport Button from \"./Button\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\thoverFew: [false, false, false],\n\t\t\thover: false,\n\t\t\tfrequencyChosen: \"empty\",\n\t\t\tprogramChosen: \"empty\",\n\t\t\tprogramDescription: \"empty\",\n\t\t\tstep1of4: true,\n\t\t\tstep2of4: false,\n\t\t\tstep3of4: false,\n\t\t};\n\t}\n\n\t// Méthode pour gérer la souris sur plusierus \"buttons\"\n\ttoggleHoverFew(i) {\n\t\tlet hoverFewCopy = this.state.hoverFew;\n\t\thoverFewCopy[i] = !hoverFewCopy[i];\n\t\tthis.setState({ hoverFew: hoverFewCopy });\n\t}\n\t// Méthode pour gérer la souris sur un \"button\"\n\ttoggleHover() {\n\t\tlet hoverCopy = !this.state.hover;\n\t\tthis.setState({ hover: hoverCopy });\n\t}\n\n\t// Méthode pour afficher le panel de choix de fréquence d'entrainement\n\tFrequencyChoose() {\n\t\t// eslint-disable-next-line no-unused-vars\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>Laissez vous guider - étape 1/4</h4>\n\t\t\t\t<h5>Je choisi ma fréquence d'entrainement</h5>\n\t\t\t\t<div id=\"frequencyChoose\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={\"button_\" + this.state.hoverFew[0]}\n\t\t\t\t\t\ttext=\"1 à 3 fois par semaine\"\n\t\t\t\t\t\tonClick={() => this.ProgramsList(\"1 à 3 fois par semaine\")}\n\t\t\t\t\t\tonMouseEnter={() => this.toggleHoverFew(0)}\n\t\t\t\t\t\tonMouseLeave={() => this.toggleHoverFew(0)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={\"button_\" + this.state.hoverFew[1]}\n\t\t\t\t\t\ttext=\"4 fois par semaine\"\n\t\t\t\t\t\tonClick={() => this.ProgramsList(\"4 fois par semaine\")}\n\t\t\t\t\t\tonMouseEnter={() => this.toggleHoverFew(1)}\n\t\t\t\t\t\tonMouseLeave={() => this.toggleHoverFew(1)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={\"button_\" + this.state.hoverFew[2]}\n\t\t\t\t\t\ttext=\"+ de 5 fois par semaine\"\n\t\t\t\t\t\tonClick={() => this.ProgramsList(\"+ de 5 fois par semaine\")}\n\t\t\t\t\t\tonMouseEnter={() => this.toggleHoverFew(2)}\n\t\t\t\t\t\tonMouseLeave={() => this.toggleHoverFew(2)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/* Méthode contenant les types de programmes d'entrainement, retourne le programme\n\tet sa description selon le choix de l'user à la méthode ProgramComfirm */\n\tProgramsList(frequency) {\n\t\tthis.setState({ frequencyChosen: frequency });\n\t\tswitch (frequency) {\n\t\t\tcase \"1 à 3 fois par semaine\":\n\t\t\t\tthis.setState({\n\t\t\t\t\tprogramChosen: \"FullBody\",\n\t\t\t\t\tprogramDescription: \"entrainer tout vos muscles à chaque séances\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"4 fois par semaine\":\n\t\t\t\tthis.setState({\n\t\t\t\t\tprogramChosen: \"HalfBody\",\n\t\t\t\t\tprogramDescription:\n\t\t\t\t\t\t\"dédier deux séances d'entrainement aux muscles du haut de votre corps, et deux séances au bas de votre corps\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"+ de 5 fois par semaine\":\n\t\t\t\tthis.setState({\n\t\t\t\t\tprogramChosen: \"Split\",\n\t\t\t\t\tprogramDescription: \"entrainer un groupe musculaire différent à chaque séance\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t\tthis.setState({ step1of4: false, step2of4: true, hoverFew: [false, false, false] });\n\t}\n\n\t// Méthode permettant d'afficher la page de confirmation du type de programme\n\tProgramComfirm() {\n\t\tlet programDescripton = this.state.programDescription;\n\t\tlet frequencyChosen = this.state.frequencyChosen;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>Laissez vous guider - étape 2/4</h4>\n\t\t\t\t<h5>Je confirme mon format d'entrainement</h5>\n\t\t\t\t<p>\n\t\t\t\t\tVous avez choisi de vous entrainer {frequencyChosen}, votre coach vous recommande un programme de type{\" \"}\n\t\t\t\t\t<b>{this.state.programChosen}</b>.<br />\n\t\t\t\t\tCe programme consiste à {programDescripton}.\n\t\t\t\t</p>\n\t\t\t\t<div id=\"programComfirm\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={\"button_\" + this.state.hoverFew[0]}\n\t\t\t\t\t\ttext=\"Retour\"\n\t\t\t\t\t\tonClick={() => this.setState({ step1of4: true, step2of4: false, hoverFew: [false, false, false] })}\n\t\t\t\t\t\tonMouseEnter={() => this.toggleHoverFew(0)}\n\t\t\t\t\t\tonMouseLeave={() => this.toggleHoverFew(0)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={\"button_\" + this.state.hoverFew[1]}\n\t\t\t\t\t\ttext=\"Je construis mon programme\"\n\t\t\t\t\t\tonClick={() => this.setState({ step2of4: false, step3of4: true })}\n\t\t\t\t\t\tonMouseEnter={() => this.toggleHoverFew(1)}\n\t\t\t\t\t\tonMouseLeave={() => this.toggleHoverFew(1)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Méthode pour afficher la page de création du programme personnalisé\n\tProgramCreation() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>Laissez vous guider - étape 3/4</h4>\n\t\t\t\t<h5>Je crée mon programme d'entrainement</h5>\n\t\t\t\t<div id=\"choixProgramme\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLe format d'entrainement proposé par votre coach est le {this.state.programChosen} <br />\n\t\t\t\t\t\t{this.state.programChosen === \"FullBody\" && this.fullbodyProgram()}\n\t\t\t\t\t\t{this.state.programChosen === \"HalfBody\" && this.halfbodyProgram()}\n\t\t\t\t\t\t{this.state.programChosen === \"Split\" && this.splitProgram()}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tfullbodyProgram() {\n\t\treturn <em>Créer mon programme Fullbody, en cours de développement...</em>;\n\t}\n\n\thalfbodyProgram() {\n\t\treturn <em>Créer mon programme Halfbody, en cours de développement...</em>;\n\t}\n\n\tsplitProgram() {\n\t\treturn <em>Créer mon programme Split, en cours de développement...</em>;\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.step1of4 && this.FrequencyChoose()}\n\t\t\t\t{this.state.step2of4 && this.ProgramComfirm()}\n\t\t\t\t{this.state.step3of4 && this.ProgramCreation()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\");\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"monProgramme\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}